#define ll long long int
class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
         
         //this will show floating point error;
        //code here
        //int p=1;
        //vector<ll>ans;
        //for(int i=0;i<n;i++){
        //   p=p*nums[i]; 
        //}
        //for(int i=0;i<n;i++){
        //ll a=p/nums[i];
        //    ans.push_back(a);
        //}
        //return ans;
        
        
        //this is correct solution
        
        vector<ll>s(n+1);
        vector<ll>e(n+1);
         vector<ll>ans(n+1);
     
        if(n==1){
           ans[0]=1;
           return ans;
        }
      
        s[0]=1;
        e[n-1]=1;
        for(int i=1;i<n;i++){
            s[i]=s[i-1]*nums[i-1];
        }
        for(int i=n-2;i>=0;i--){
            e[i]=e[i+1]*nums[i+1];
        }
       
        for(int i=0;i<n;i++){
            ans[i]=e[i]*s[i];
        }
        
       
    return ans;
    }
};
