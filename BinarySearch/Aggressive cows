class Solution {
public:

bool ispossible( vector<int> &stalls,int k,int mid){
    int c=1;
    int pos=stalls[0];
    for(int i=1;i<stalls.size();i++){
        if(stalls[i]-pos>=mid){
            c++;
            pos=stalls[i];
        }
        if(c==k){
            return true;
        }
    }
    return false;
    
}

    int solve(int n, int k, vector<int> &stalls) {
    
        // Write your code here
        sort(stalls.begin(),stalls.end());
        int ans=-1;
        int s=0;
        int e=stalls[n-1]-stalls[0];
       int mid=s+(e-s)/2;
        while(s<=e){
            
            if(ispossible(stalls,k,mid)){
                ans=mid;
                s=mid+1;
            }
            else{
                e=mid-1;
            }
            mid=s+(e-s)/2;
           
        }
        return ans;
    }
};
