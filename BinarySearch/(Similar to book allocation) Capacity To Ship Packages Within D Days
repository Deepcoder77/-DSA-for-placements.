class Solution {
public:

bool ispossible(vector<int>& weights, int days,int sol){
        int weightsum=0;
        int count=1;
        int n=weights.size();
        for(int i=0;i<n;i++){
            if(weights[i]>sol){
                return false;
            }
            if(weightsum+weights[i]>sol){
                count++;
                weightsum=weights[i];
                if(count>days){
                    return false;
                }
            }
            else{
                weightsum+=weights[i];
            }
        }
        return true;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size();
        //if(days>n){
        //    returnn -1;
        //}
        int sum=accumulate(weights.begin(),weights.end(),0);
        int s=0;
        int e=sum;
        int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(ispossible(weights,days,mid)){
            ans=mid;
            e=mid-1;
        }
        else{
            s=mid+1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
    }
};
