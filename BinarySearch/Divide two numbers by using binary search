class Solution {
public:
    int divide(int dividend, int divisor) {
     long long s = 0;
  long long e = abs(dividend);
  long long ans = 0;
  long long mid = s + (e-s)/2;
  while(s <= e) {
  //these condition are added for leetcode testcase
if (divisor == 0 || (dividend == INT_MIN && divisor == -1)) {
            return INT_MAX;
        }
        if((dividend == INT_MIN && divisor == 1)){
            return INT_MIN;
        }
    if( abs(mid*divisor) == abs(dividend)) {
      ans = mid;
      break;
    }
    
    if(abs(mid*divisor) > abs(dividend)) {
      
      e = mid - 1;
    } 
    else {
      
      ans = mid;
      
      s = mid + 1;
    }
    mid = s + (e-s)/2;
  }

//Below condition is to deal with negative numbers if atleast one out of dividend or divisor is less than 0 then we have to return negative answer;
  if((divisor<0 && dividend<0) || (divisor>0 && dividend>0))
    return ans;
  else {
    return -ans;
  }

    }
};
