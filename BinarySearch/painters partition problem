class Solution
{
  public:
  
  bool ispossible(int arr[], int n, int k,long long sol){
        long long time=0;
        long long count=1;
        
        for(int i=0;i<n;i++){
            if(arr[i]>sol){
                return false;
            }
            if(time+arr[i]>sol){
                count++;
                time=arr[i];
                if(count>k){
                    return false;
                }
            }
            else{
                time+=arr[i];
            }
        }
        return true;
    }
    long long minTime(int arr[], int n, int k)
    {
        // code here
        // return minimum time
        
        long long ans=-1;
        
        long long sum=accumulate(arr,arr+n,0);
        long long s=0;
        long long e=sum;
        long long mid=s+(e-s)/2;
        
        while(s<=e){
        if(ispossible(arr,n,k,mid)){
            ans=mid;
            e=mid-1;
        }
        else{
            s=mid+1;
        }
        mid=s+(e-s)/2;
        }
        return ans;
    }
};
