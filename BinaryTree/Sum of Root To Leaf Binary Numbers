
class Solution {
public:

int binarytodecimal(string s){
    int power=s.size()-1;
    int decimal=0;
    for(int i=0;i<s.size();i++){
    if(s[i]=='1'){
decimal+=pow(2,power);
    }
    power--;
    }
    return decimal;
}
void solve(TreeNode*root,string s,vector<string>&ans){
    if(root==NULL){
        return ;
    }
    if(root->left==NULL&&root->right==NULL){
        s+=to_string(root->val);
ans.push_back(s);
    }
    s+=to_string(root->val);
    solve(root->left,s,ans);
    solve(root->right,s,ans);

}


    int sumRootToLeaf(TreeNode* root) {
        vector<string>as;
        string s="";
        solve(root,s,as);
        int deci=0;
        for(int i=0;i<as.size();i++){
            deci+=binarytodecimal(as[i]);
        }
        return deci;
    }
};
