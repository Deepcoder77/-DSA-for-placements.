class Solution {
public:
TreeNode*lca(TreeNode*root,TreeNode*p,TreeNode*q){
    if(root==NULL){
        return NULL;
    }
    if(root->val==p->val){
        return root;
    }
    if(root->val==q->val){
return root;
    }
    TreeNode*left=lca(root->left,p,q);
    TreeNode*right=lca(root->right,p,q);

    if(left==NULL&&right==NULL){
        return NULL;

    }
    else if(left!=NULL&&right==NULL){
        return left;
    }
    else if(left==NULL&&right!=NULL){
        return right;
    }
    else{  //kisi root pr hai hm aur uske left me se v nULL na hai aur right me se v NULL na hai 
    //means p and q dono mil gaye hai and jis node pr hm khade hai wo node p and q ki LCA hogi;

        return root;
    }
}
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        return lca(root,p,q);
    }
};
