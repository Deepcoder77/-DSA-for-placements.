class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        map<int,int>m;
        vector<int>ans;
        queue<pair<Node*,int>>q;
        q.push(make_pair(root,0));
        
        while(!q.empty()){
            pair<Node*,int>temp=q.front();
              q.pop();
            Node*frontnode=temp.first;
            int hd=temp.second;
          
         
                m[hd]=frontnode->data;
            
            if(frontnode->left){
                q.push(make_pair(frontnode->left,hd-1));
            }
            if(frontnode->right){
                q.push(make_pair(frontnode->right,hd+1));
            }
        }
        for(auto g:m){
            ans.push_back(g.second);
        }
        return ans;
    }
};
